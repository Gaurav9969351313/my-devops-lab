 https://10.42.0.42/

    Username: admin
    Password: QHrhd7pmk3Fr


https://access.redhat.com/management/subscription_allocations

create subscription in details as well as in subscriptions tab ==> export manifest and then ==> uploadit on your url to unlock 60 days trial 

=========================== Install Gitlab ==========================
https://docs.gitlab.com/ee/topics/offline/quick_start_guide.html

Thank you for installing GitLab!
GitLab was unable to detect a valid hostname for your instance.
Please configure a URL for your GitLab instance by setting `external_url`
configuration in /etc/gitlab/gitlab.rb file.
Then, you can start your GitLab instance by running the following command:
  sudo gitlab-ctl reconfigure

For a comprehensive list of configuration options please see the OmnibusGitLab readme
https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md


=========================== Install Nexus ===========================
https://devopscube.com/how-to-install-latest-sonatype-nexus-3-on-linux/

sudo apt install openjdk-8-jre-headless 

sudo mkdir /app && cd /app

sudo wget -O nexus.tar.gz https://download.sonatype.com/nexus/3/latest-unix.tar.gz

sudo tar -xvf nexus.tar.gz

sudo mv nexus-3* nexus

sudo adduser nexus

sudo chown -R nexus:nexus nexus
sudo chown -R nexus:nexus sonatype-work
--------------------------------------------
sudo vi  /app/nexus/bin/nexus.rc

# Uncomment run_as_user parameter and set it as following.
run_as_user="nexus"
--------------------------------------------

sudo vi /app/nexus/bin/nexus.vmoptions

-Xms2703m
-Xmx2703m
-XX:MaxDirectMemorySize=2703m
-XX:+UnlockDiagnosticVMOptions
-XX:+UnsyncloadClass
-XX:+LogVMOutput
-XX:LogFile=../sonatype-work/nexus3/log/jvm.log
-XX:-OmitStackTraceInFastThrow
-Djava.net.preferIPv4Stack=true
-Dkaraf.home=.
-Dkaraf.base=.
-Dkaraf.etc=etc/karaf
-Djava.util.logging.config.file=etc/karaf/java.util.logging.properties
-Dkaraf.data=/nexus/nexus-data
-Djava.io.tmpdir=../sonatype-work/nexus3/tmp
-Dkaraf.startLocalConsole=false

------------------------------------------------

sudo vi /etc/systemd/system/nexus.service

[Unit]
Description=nexus service
After=network.target

[Service]
Type=forking
LimitNOFILE=65536
User=nexus
Group=nexus
ExecStart=/home/vagrant/nexus-detup/nexus/bin/nexus start
ExecStop=/home/vagrant/nexus-detup/nexus/bin/nexus stop
User=nexus
Restart=on-abort

[Install]
WantedBy=multi-user.target

-----------------------------------------------

sudo systemctl start nexus


http://localhost:8081

Username: admin
Password: You can find the default admin password in /app/sonatype-work/nexus3/admin.password

cat /app/sonatype-work/nexus3/admin.password

curl --include --silent http://localhost:8081/ | grep Server

==============================================================
sudo chcon -R -t bin_t /app/nexus/bin/nexus

==================================================================================================

Vagrant.configure("2") do |config|
  
  config.vm.provider "virtualbox" do |rs|
    rs.memory = 2048
    rs.cpus = 2
  end

  # Will not check for box updates during every startup.
  config.vm.box_check_update = false

  config.vm.synced_folder ".", "/vagrant"

  config.vm.define "controller" do |controller| # this is a gitlab server
    controller.vm.box = "ubuntu/focal64"
    controller.vm.hostname = "controller.gtlab.com"
    controller.vm.network "private_network", ip: "192.168.0.1"
    config.vm.network "forwarded_port", guest: 8080, host: 8080
    config.vm.network "forwarded_port", guest: 5432, host: 5432
    
    controller.vm.provision "shell", path: "install_gitlab.sh", privileged: true 
    controller.vm.provision "shell", path: "install_nexus.sh", privileged: true 
    controller.vm.provision "shell", path: "install_ansible_tower.sh", privileged: true 
    controller.vm.provision "file", source: "key_gen.sh", destination: "/home/vagrant/"
  end

end


==================================================================================================
config.vm.network "forwarded_port", guest: 5432, host: 7001
config.vm.synced_folder ".", "/vagrant"

vagrant reload
==================================================================================================
install_gitlab.sh
-----------------

#! /bin/bash
mkdir /opt/setups
echo "================================= Started Downloading Gitlab ================================="
curl --silent "https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh" | sudo bash
sudo apt-get install --download-only gitlab-ee
echo "================================= Copying Gitlab *.deb to /opt/setups ========================"
sudo cp /var/cache/apt/archives/*.deb /opt/setups
echo "================================= Gitlab Installation Started ================================"
sudo dpkg -i *.deb
==================================================================================================

install_nexus.sh
----------------
#! /bin/bash
mkdir /opt/setups

echo "================================= Installation Started With Java ============================"
sudo apt install -y openjdk-8-jre-headless 

cd /opt/setups
echo "================================= Started Downloading Nexus ================================="
sudo wget -O nexus.tar.gz https://download.sonatype.com/nexus/3/latest-unix.tar.gz
sudo tar -xvf nexus.tar.gz
sudo mv nexus-3* nexus
sudo adduser nexus

sudo chown -R nexus:nexus nexus
sudo chown -R nexus:nexus sonatype-work

sudo systemctl start nexus
echo "================================= Nexus Password ==========================================="
cat /app/sonatype-work/nexus3/admin.password

curl --include --silent http://localhost:8081/ | grep Server
==================================================================================================

install_ansible_tower.sh
------------------------
#! /bin/bash
cd /opt/setups
sudo wget -O ansible-tower.tar.gz https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-latest.tar.gz
sudo tar -xvf ansible-tower.tar.gz
==================================================================================================
install_postgres.sh
-------------------

#! /bin/bash

sudo apt install -y postgresql postgresql-contrib
sudo systemctl start postgresql.service

# sudo -i -u postgres
# sudo -u postgres psql
# sudo -u postgres createuser --interactive
==================================================================================================
install_docker.sh
-----------------

#! /bin/bash
sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg lsb-release

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
==================================================================================================

// jhipster import-jdl ./ssp.jdl --force

entity DmmDsAuditHistory {
	triggerFileId String 
     outputFileName String 
     processStep String 
     status String 
     recordsCount Long 
     traceId String 
     dsId Long
}

entity DmmDsIOParameters {
     name String
     type String
     description String
     valu String
}

entity DmmDsMasterData {
	 serviceName String
      triggerFilePath String
      sqlFileName String
      spName String
      sourceDbName String
      isInstanceActive Boolean
      executionType String
}

entity DmmDsOutputFileDetails {
	 fileId String
      suffix String
      format String
      path String
      skipHeaders Boolean
      trailerRecord String
      sheetName String
}

entity DependentFileDetails {
	identifier String
     suffix String
     format String
     hasHeaders Boolean
}

entity DmmFtgInstanceDetails {
	 inputFileDelimiter String
      rptInputFileSuffix String
      isInstanceActive String
      isRptMultiTabExcel String
      lastUpdatedBy String
      rptInputFileIdentifier String
      rptInputFolder String
      rptInputFormat String
      isEmptyRptCheckRequired String
      reportSource String
}

entity DmmFtgMaster {
      clientName String
      isClientActive String
}

entity TransmissionDetails {
	fileFormatterClass String
     transType String
     transParams String
     isPwdProtectionRequired String
     isRptCsvWithoutQuotes String
     outputFileDelimiter String
     outputFileSuffix String
     rptBccEmailId String
     rptCcEmailId String
     rptEmailSubjectLine String
     rptFromEmailId String
     rptOutputFileIdentifier String
     rptOutputFormat String
     rptTemplateName String
     rptToEmailId String
     checkSumAlgorithm String
}

entity TransmissionHistory {
	rptTransId Long
     inputFileName String
     outputFileName String
     processStep String
     status String
     recordCount Long
     notes String
     traceId String
}

dto * with mapstruct
service all with serviceImpl
skipClient all
